# Generated by Django 2.0 on 2017-12-19 22:12

import core.validators
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AppSettings',
            fields=[
                ('property', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='BuyAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount', models.IntegerField(default=0)),
                ('init_price', models.FloatField(default=0)),
                ('final_price', models.FloatField(default=0)),
                ('info', models.CharField(default='', max_length=300)),
                ('is_lucky', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CreditCard',
            fields=[
                ('card_number', models.CharField(max_length=19, primary_key=True, serialize=False, validators=[core.validators.is_credit_card])),
                ('amount', models.FloatField(default=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('code', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('percent', models.IntegerField(verbose_name='discount percentage')),
                ('used', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.CharField(max_length=16, validators=[core.validators.is_feature_unique])),
            ],
        ),
        migrations.CreateModel(
            name='Performance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='date of performance')),
                ('time', models.TimeField(verbose_name='time of performance')),
                ('price', models.FloatField(verbose_name='price of performance')),
                ('name', models.CharField(max_length=32, verbose_name='name of performance')),
                ('description', models.TextField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(default='', max_length=300, null=True)),
                ('email', models.CharField(max_length=50, null=True, validators=[django.core.validators.EmailValidator()])),
                ('credit_card', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owner', to='core.CreditCard')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=16)),
                ('booked', models.DateTimeField(blank=True, null=True)),
                ('bought', models.DateTimeField(blank=True, null=True)),
                ('booked_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='booked_tickets', to=settings.AUTH_USER_MODEL)),
                ('bought_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bought_tickets', to=settings.AUTH_USER_MODEL)),
                ('performance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='core.Performance')),
            ],
        ),
        migrations.CreateModel(
            name='TicketHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('message', models.CharField(max_length=100)),
                ('ticket_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Ticket')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserFeature',
            fields=[
                ('name', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('price', models.FloatField()),
                ('incompatible_with', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_feature', to='core.Feature')),
            ],
        ),
        migrations.AddField(
            model_name='feature',
            name='performance',
            field=models.ManyToManyField(related_name='features', to='core.Performance'),
        ),
        migrations.AddField(
            model_name='buyaction',
            name='tickets',
            field=models.ManyToManyField(related_name='buy_action', to='core.Ticket'),
        ),
        migrations.AddField(
            model_name='buyaction',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='operation', to=settings.AUTH_USER_MODEL),
        ),
    ]
